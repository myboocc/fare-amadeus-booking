/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.intlgds.amadeus.booking.endorse;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class EndorseRequest implements org.apache.thrift.TBase<EndorseRequest, EndorseRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EndorseRequest");

  private static final org.apache.thrift.protocol.TField ORDER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("orderNo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CUSTOMER_ORDER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("customerOrderNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ENDORSE_CS_ORDER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("endorseCsOrderNo", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ENDORSE_FLIGHT_SEGMENTS_FIELD_DESC = new org.apache.thrift.protocol.TField("endorseFlightSegments", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField ENDORSE_TICKETS_FIELD_DESC = new org.apache.thrift.protocol.TField("endorseTickets", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField ENDORSE_CALL_BACK_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("endorseCallBackUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new EndorseRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new EndorseRequestTupleSchemeFactory());
  }

  public String orderNo; // required
  public String customerOrderNo; // required
  public String endorseCsOrderNo; // required
  public List<EndorseFlightSegment> endorseFlightSegments; // required
  public List<EndorseTicket> endorseTickets; // required
  public String endorseCallBackUrl; // optional
  public String remark; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_NO((short)1, "orderNo"),
    CUSTOMER_ORDER_NO((short)2, "customerOrderNo"),
    ENDORSE_CS_ORDER_NO((short)3, "endorseCsOrderNo"),
    ENDORSE_FLIGHT_SEGMENTS((short)4, "endorseFlightSegments"),
    ENDORSE_TICKETS((short)5, "endorseTickets"),
    ENDORSE_CALL_BACK_URL((short)6, "endorseCallBackUrl"),
    REMARK((short)7, "remark");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_NO
          return ORDER_NO;
        case 2: // CUSTOMER_ORDER_NO
          return CUSTOMER_ORDER_NO;
        case 3: // ENDORSE_CS_ORDER_NO
          return ENDORSE_CS_ORDER_NO;
        case 4: // ENDORSE_FLIGHT_SEGMENTS
          return ENDORSE_FLIGHT_SEGMENTS;
        case 5: // ENDORSE_TICKETS
          return ENDORSE_TICKETS;
        case 6: // ENDORSE_CALL_BACK_URL
          return ENDORSE_CALL_BACK_URL;
        case 7: // REMARK
          return REMARK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.ENDORSE_CALL_BACK_URL,_Fields.REMARK};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_NO, new org.apache.thrift.meta_data.FieldMetaData("orderNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOMER_ORDER_NO, new org.apache.thrift.meta_data.FieldMetaData("customerOrderNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENDORSE_CS_ORDER_NO, new org.apache.thrift.meta_data.FieldMetaData("endorseCsOrderNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENDORSE_FLIGHT_SEGMENTS, new org.apache.thrift.meta_data.FieldMetaData("endorseFlightSegments", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EndorseFlightSegment.class))));
    tmpMap.put(_Fields.ENDORSE_TICKETS, new org.apache.thrift.meta_data.FieldMetaData("endorseTickets", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EndorseTicket.class))));
    tmpMap.put(_Fields.ENDORSE_CALL_BACK_URL, new org.apache.thrift.meta_data.FieldMetaData("endorseCallBackUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EndorseRequest.class, metaDataMap);
  }

  public EndorseRequest() {
  }

  public EndorseRequest(
    String orderNo,
    String customerOrderNo,
    String endorseCsOrderNo,
    List<EndorseFlightSegment> endorseFlightSegments,
    List<EndorseTicket> endorseTickets)
  {
    this();
    this.orderNo = orderNo;
    this.customerOrderNo = customerOrderNo;
    this.endorseCsOrderNo = endorseCsOrderNo;
    this.endorseFlightSegments = endorseFlightSegments;
    this.endorseTickets = endorseTickets;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EndorseRequest(EndorseRequest other) {
    if (other.isSetOrderNo()) {
      this.orderNo = other.orderNo;
    }
    if (other.isSetCustomerOrderNo()) {
      this.customerOrderNo = other.customerOrderNo;
    }
    if (other.isSetEndorseCsOrderNo()) {
      this.endorseCsOrderNo = other.endorseCsOrderNo;
    }
    if (other.isSetEndorseFlightSegments()) {
      List<EndorseFlightSegment> __this__endorseFlightSegments = new ArrayList<EndorseFlightSegment>();
      for (EndorseFlightSegment other_element : other.endorseFlightSegments) {
        __this__endorseFlightSegments.add(new EndorseFlightSegment(other_element));
      }
      this.endorseFlightSegments = __this__endorseFlightSegments;
    }
    if (other.isSetEndorseTickets()) {
      List<EndorseTicket> __this__endorseTickets = new ArrayList<EndorseTicket>();
      for (EndorseTicket other_element : other.endorseTickets) {
        __this__endorseTickets.add(new EndorseTicket(other_element));
      }
      this.endorseTickets = __this__endorseTickets;
    }
    if (other.isSetEndorseCallBackUrl()) {
      this.endorseCallBackUrl = other.endorseCallBackUrl;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
  }

  public EndorseRequest deepCopy() {
    return new EndorseRequest(this);
  }

  @Override
  public void clear() {
    this.orderNo = null;
    this.customerOrderNo = null;
    this.endorseCsOrderNo = null;
    this.endorseFlightSegments = null;
    this.endorseTickets = null;
    this.endorseCallBackUrl = null;
    this.remark = null;
  }

  public String getOrderNo() {
    return this.orderNo;
  }

  public EndorseRequest setOrderNo(String orderNo) {
    this.orderNo = orderNo;
    return this;
  }

  public void unsetOrderNo() {
    this.orderNo = null;
  }

  /** Returns true if field orderNo is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderNo() {
    return this.orderNo != null;
  }

  public void setOrderNoIsSet(boolean value) {
    if (!value) {
      this.orderNo = null;
    }
  }

  public String getCustomerOrderNo() {
    return this.customerOrderNo;
  }

  public EndorseRequest setCustomerOrderNo(String customerOrderNo) {
    this.customerOrderNo = customerOrderNo;
    return this;
  }

  public void unsetCustomerOrderNo() {
    this.customerOrderNo = null;
  }

  /** Returns true if field customerOrderNo is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomerOrderNo() {
    return this.customerOrderNo != null;
  }

  public void setCustomerOrderNoIsSet(boolean value) {
    if (!value) {
      this.customerOrderNo = null;
    }
  }

  public String getEndorseCsOrderNo() {
    return this.endorseCsOrderNo;
  }

  public EndorseRequest setEndorseCsOrderNo(String endorseCsOrderNo) {
    this.endorseCsOrderNo = endorseCsOrderNo;
    return this;
  }

  public void unsetEndorseCsOrderNo() {
    this.endorseCsOrderNo = null;
  }

  /** Returns true if field endorseCsOrderNo is set (has been assigned a value) and false otherwise */
  public boolean isSetEndorseCsOrderNo() {
    return this.endorseCsOrderNo != null;
  }

  public void setEndorseCsOrderNoIsSet(boolean value) {
    if (!value) {
      this.endorseCsOrderNo = null;
    }
  }

  public int getEndorseFlightSegmentsSize() {
    return (this.endorseFlightSegments == null) ? 0 : this.endorseFlightSegments.size();
  }

  public java.util.Iterator<EndorseFlightSegment> getEndorseFlightSegmentsIterator() {
    return (this.endorseFlightSegments == null) ? null : this.endorseFlightSegments.iterator();
  }

  public void addToEndorseFlightSegments(EndorseFlightSegment elem) {
    if (this.endorseFlightSegments == null) {
      this.endorseFlightSegments = new ArrayList<EndorseFlightSegment>();
    }
    this.endorseFlightSegments.add(elem);
  }

  public List<EndorseFlightSegment> getEndorseFlightSegments() {
    return this.endorseFlightSegments;
  }

  public EndorseRequest setEndorseFlightSegments(List<EndorseFlightSegment> endorseFlightSegments) {
    this.endorseFlightSegments = endorseFlightSegments;
    return this;
  }

  public void unsetEndorseFlightSegments() {
    this.endorseFlightSegments = null;
  }

  /** Returns true if field endorseFlightSegments is set (has been assigned a value) and false otherwise */
  public boolean isSetEndorseFlightSegments() {
    return this.endorseFlightSegments != null;
  }

  public void setEndorseFlightSegmentsIsSet(boolean value) {
    if (!value) {
      this.endorseFlightSegments = null;
    }
  }

  public int getEndorseTicketsSize() {
    return (this.endorseTickets == null) ? 0 : this.endorseTickets.size();
  }

  public java.util.Iterator<EndorseTicket> getEndorseTicketsIterator() {
    return (this.endorseTickets == null) ? null : this.endorseTickets.iterator();
  }

  public void addToEndorseTickets(EndorseTicket elem) {
    if (this.endorseTickets == null) {
      this.endorseTickets = new ArrayList<EndorseTicket>();
    }
    this.endorseTickets.add(elem);
  }

  public List<EndorseTicket> getEndorseTickets() {
    return this.endorseTickets;
  }

  public EndorseRequest setEndorseTickets(List<EndorseTicket> endorseTickets) {
    this.endorseTickets = endorseTickets;
    return this;
  }

  public void unsetEndorseTickets() {
    this.endorseTickets = null;
  }

  /** Returns true if field endorseTickets is set (has been assigned a value) and false otherwise */
  public boolean isSetEndorseTickets() {
    return this.endorseTickets != null;
  }

  public void setEndorseTicketsIsSet(boolean value) {
    if (!value) {
      this.endorseTickets = null;
    }
  }

  public String getEndorseCallBackUrl() {
    return this.endorseCallBackUrl;
  }

  public EndorseRequest setEndorseCallBackUrl(String endorseCallBackUrl) {
    this.endorseCallBackUrl = endorseCallBackUrl;
    return this;
  }

  public void unsetEndorseCallBackUrl() {
    this.endorseCallBackUrl = null;
  }

  /** Returns true if field endorseCallBackUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetEndorseCallBackUrl() {
    return this.endorseCallBackUrl != null;
  }

  public void setEndorseCallBackUrlIsSet(boolean value) {
    if (!value) {
      this.endorseCallBackUrl = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public EndorseRequest setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_NO:
      if (value == null) {
        unsetOrderNo();
      } else {
        setOrderNo((String)value);
      }
      break;

    case CUSTOMER_ORDER_NO:
      if (value == null) {
        unsetCustomerOrderNo();
      } else {
        setCustomerOrderNo((String)value);
      }
      break;

    case ENDORSE_CS_ORDER_NO:
      if (value == null) {
        unsetEndorseCsOrderNo();
      } else {
        setEndorseCsOrderNo((String)value);
      }
      break;

    case ENDORSE_FLIGHT_SEGMENTS:
      if (value == null) {
        unsetEndorseFlightSegments();
      } else {
        setEndorseFlightSegments((List<EndorseFlightSegment>)value);
      }
      break;

    case ENDORSE_TICKETS:
      if (value == null) {
        unsetEndorseTickets();
      } else {
        setEndorseTickets((List<EndorseTicket>)value);
      }
      break;

    case ENDORSE_CALL_BACK_URL:
      if (value == null) {
        unsetEndorseCallBackUrl();
      } else {
        setEndorseCallBackUrl((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_NO:
      return getOrderNo();

    case CUSTOMER_ORDER_NO:
      return getCustomerOrderNo();

    case ENDORSE_CS_ORDER_NO:
      return getEndorseCsOrderNo();

    case ENDORSE_FLIGHT_SEGMENTS:
      return getEndorseFlightSegments();

    case ENDORSE_TICKETS:
      return getEndorseTickets();

    case ENDORSE_CALL_BACK_URL:
      return getEndorseCallBackUrl();

    case REMARK:
      return getRemark();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_NO:
      return isSetOrderNo();
    case CUSTOMER_ORDER_NO:
      return isSetCustomerOrderNo();
    case ENDORSE_CS_ORDER_NO:
      return isSetEndorseCsOrderNo();
    case ENDORSE_FLIGHT_SEGMENTS:
      return isSetEndorseFlightSegments();
    case ENDORSE_TICKETS:
      return isSetEndorseTickets();
    case ENDORSE_CALL_BACK_URL:
      return isSetEndorseCallBackUrl();
    case REMARK:
      return isSetRemark();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof EndorseRequest)
      return this.equals((EndorseRequest)that);
    return false;
  }

  public boolean equals(EndorseRequest that) {
    if (that == null)
      return false;

    boolean this_present_orderNo = true && this.isSetOrderNo();
    boolean that_present_orderNo = true && that.isSetOrderNo();
    if (this_present_orderNo || that_present_orderNo) {
      if (!(this_present_orderNo && that_present_orderNo))
        return false;
      if (!this.orderNo.equals(that.orderNo))
        return false;
    }

    boolean this_present_customerOrderNo = true && this.isSetCustomerOrderNo();
    boolean that_present_customerOrderNo = true && that.isSetCustomerOrderNo();
    if (this_present_customerOrderNo || that_present_customerOrderNo) {
      if (!(this_present_customerOrderNo && that_present_customerOrderNo))
        return false;
      if (!this.customerOrderNo.equals(that.customerOrderNo))
        return false;
    }

    boolean this_present_endorseCsOrderNo = true && this.isSetEndorseCsOrderNo();
    boolean that_present_endorseCsOrderNo = true && that.isSetEndorseCsOrderNo();
    if (this_present_endorseCsOrderNo || that_present_endorseCsOrderNo) {
      if (!(this_present_endorseCsOrderNo && that_present_endorseCsOrderNo))
        return false;
      if (!this.endorseCsOrderNo.equals(that.endorseCsOrderNo))
        return false;
    }

    boolean this_present_endorseFlightSegments = true && this.isSetEndorseFlightSegments();
    boolean that_present_endorseFlightSegments = true && that.isSetEndorseFlightSegments();
    if (this_present_endorseFlightSegments || that_present_endorseFlightSegments) {
      if (!(this_present_endorseFlightSegments && that_present_endorseFlightSegments))
        return false;
      if (!this.endorseFlightSegments.equals(that.endorseFlightSegments))
        return false;
    }

    boolean this_present_endorseTickets = true && this.isSetEndorseTickets();
    boolean that_present_endorseTickets = true && that.isSetEndorseTickets();
    if (this_present_endorseTickets || that_present_endorseTickets) {
      if (!(this_present_endorseTickets && that_present_endorseTickets))
        return false;
      if (!this.endorseTickets.equals(that.endorseTickets))
        return false;
    }

    boolean this_present_endorseCallBackUrl = true && this.isSetEndorseCallBackUrl();
    boolean that_present_endorseCallBackUrl = true && that.isSetEndorseCallBackUrl();
    if (this_present_endorseCallBackUrl || that_present_endorseCallBackUrl) {
      if (!(this_present_endorseCallBackUrl && that_present_endorseCallBackUrl))
        return false;
      if (!this.endorseCallBackUrl.equals(that.endorseCallBackUrl))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(EndorseRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    EndorseRequest typedOther = (EndorseRequest)other;

    lastComparison = Boolean.valueOf(isSetOrderNo()).compareTo(typedOther.isSetOrderNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderNo, typedOther.orderNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerOrderNo()).compareTo(typedOther.isSetCustomerOrderNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerOrderNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customerOrderNo, typedOther.customerOrderNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndorseCsOrderNo()).compareTo(typedOther.isSetEndorseCsOrderNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndorseCsOrderNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endorseCsOrderNo, typedOther.endorseCsOrderNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndorseFlightSegments()).compareTo(typedOther.isSetEndorseFlightSegments());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndorseFlightSegments()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endorseFlightSegments, typedOther.endorseFlightSegments);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndorseTickets()).compareTo(typedOther.isSetEndorseTickets());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndorseTickets()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endorseTickets, typedOther.endorseTickets);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndorseCallBackUrl()).compareTo(typedOther.isSetEndorseCallBackUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndorseCallBackUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endorseCallBackUrl, typedOther.endorseCallBackUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(typedOther.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, typedOther.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("EndorseRequest(");
    boolean first = true;

    sb.append("orderNo:");
    if (this.orderNo == null) {
      sb.append("null");
    } else {
      sb.append(this.orderNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerOrderNo:");
    if (this.customerOrderNo == null) {
      sb.append("null");
    } else {
      sb.append(this.customerOrderNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endorseCsOrderNo:");
    if (this.endorseCsOrderNo == null) {
      sb.append("null");
    } else {
      sb.append(this.endorseCsOrderNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endorseFlightSegments:");
    if (this.endorseFlightSegments == null) {
      sb.append("null");
    } else {
      sb.append(this.endorseFlightSegments);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endorseTickets:");
    if (this.endorseTickets == null) {
      sb.append("null");
    } else {
      sb.append(this.endorseTickets);
    }
    first = false;
    if (isSetEndorseCallBackUrl()) {
      if (!first) sb.append(", ");
      sb.append("endorseCallBackUrl:");
      if (this.endorseCallBackUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.endorseCallBackUrl);
      }
      first = false;
    }
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (orderNo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orderNo' was not present! Struct: " + toString());
    }
    if (customerOrderNo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'customerOrderNo' was not present! Struct: " + toString());
    }
    if (endorseCsOrderNo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'endorseCsOrderNo' was not present! Struct: " + toString());
    }
    if (endorseFlightSegments == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'endorseFlightSegments' was not present! Struct: " + toString());
    }
    if (endorseTickets == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'endorseTickets' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EndorseRequestStandardSchemeFactory implements SchemeFactory {
    public EndorseRequestStandardScheme getScheme() {
      return new EndorseRequestStandardScheme();
    }
  }

  private static class EndorseRequestStandardScheme extends StandardScheme<EndorseRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EndorseRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderNo = iprot.readString();
              struct.setOrderNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CUSTOMER_ORDER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customerOrderNo = iprot.readString();
              struct.setCustomerOrderNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ENDORSE_CS_ORDER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endorseCsOrderNo = iprot.readString();
              struct.setEndorseCsOrderNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ENDORSE_FLIGHT_SEGMENTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.endorseFlightSegments = new ArrayList<EndorseFlightSegment>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  EndorseFlightSegment _elem2; // required
                  _elem2 = new EndorseFlightSegment();
                  _elem2.read(iprot);
                  struct.endorseFlightSegments.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setEndorseFlightSegmentsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ENDORSE_TICKETS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.endorseTickets = new ArrayList<EndorseTicket>(_list3.size);
                for (int _i4 = 0; _i4 < _list3.size; ++_i4)
                {
                  EndorseTicket _elem5; // required
                  _elem5 = new EndorseTicket();
                  _elem5.read(iprot);
                  struct.endorseTickets.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setEndorseTicketsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ENDORSE_CALL_BACK_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endorseCallBackUrl = iprot.readString();
              struct.setEndorseCallBackUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EndorseRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderNo != null) {
        oprot.writeFieldBegin(ORDER_NO_FIELD_DESC);
        oprot.writeString(struct.orderNo);
        oprot.writeFieldEnd();
      }
      if (struct.customerOrderNo != null) {
        oprot.writeFieldBegin(CUSTOMER_ORDER_NO_FIELD_DESC);
        oprot.writeString(struct.customerOrderNo);
        oprot.writeFieldEnd();
      }
      if (struct.endorseCsOrderNo != null) {
        oprot.writeFieldBegin(ENDORSE_CS_ORDER_NO_FIELD_DESC);
        oprot.writeString(struct.endorseCsOrderNo);
        oprot.writeFieldEnd();
      }
      if (struct.endorseFlightSegments != null) {
        oprot.writeFieldBegin(ENDORSE_FLIGHT_SEGMENTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.endorseFlightSegments.size()));
          for (EndorseFlightSegment _iter6 : struct.endorseFlightSegments)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.endorseTickets != null) {
        oprot.writeFieldBegin(ENDORSE_TICKETS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.endorseTickets.size()));
          for (EndorseTicket _iter7 : struct.endorseTickets)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.endorseCallBackUrl != null) {
        if (struct.isSetEndorseCallBackUrl()) {
          oprot.writeFieldBegin(ENDORSE_CALL_BACK_URL_FIELD_DESC);
          oprot.writeString(struct.endorseCallBackUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EndorseRequestTupleSchemeFactory implements SchemeFactory {
    public EndorseRequestTupleScheme getScheme() {
      return new EndorseRequestTupleScheme();
    }
  }

  private static class EndorseRequestTupleScheme extends TupleScheme<EndorseRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EndorseRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.orderNo);
      oprot.writeString(struct.customerOrderNo);
      oprot.writeString(struct.endorseCsOrderNo);
      {
        oprot.writeI32(struct.endorseFlightSegments.size());
        for (EndorseFlightSegment _iter8 : struct.endorseFlightSegments)
        {
          _iter8.write(oprot);
        }
      }
      {
        oprot.writeI32(struct.endorseTickets.size());
        for (EndorseTicket _iter9 : struct.endorseTickets)
        {
          _iter9.write(oprot);
        }
      }
      BitSet optionals = new BitSet();
      if (struct.isSetEndorseCallBackUrl()) {
        optionals.set(0);
      }
      if (struct.isSetRemark()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetEndorseCallBackUrl()) {
        oprot.writeString(struct.endorseCallBackUrl);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EndorseRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.orderNo = iprot.readString();
      struct.setOrderNoIsSet(true);
      struct.customerOrderNo = iprot.readString();
      struct.setCustomerOrderNoIsSet(true);
      struct.endorseCsOrderNo = iprot.readString();
      struct.setEndorseCsOrderNoIsSet(true);
      {
        org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.endorseFlightSegments = new ArrayList<EndorseFlightSegment>(_list10.size);
        for (int _i11 = 0; _i11 < _list10.size; ++_i11)
        {
          EndorseFlightSegment _elem12; // required
          _elem12 = new EndorseFlightSegment();
          _elem12.read(iprot);
          struct.endorseFlightSegments.add(_elem12);
        }
      }
      struct.setEndorseFlightSegmentsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.endorseTickets = new ArrayList<EndorseTicket>(_list13.size);
        for (int _i14 = 0; _i14 < _list13.size; ++_i14)
        {
          EndorseTicket _elem15; // required
          _elem15 = new EndorseTicket();
          _elem15.read(iprot);
          struct.endorseTickets.add(_elem15);
        }
      }
      struct.setEndorseTicketsIsSet(true);
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.endorseCallBackUrl = iprot.readString();
        struct.setEndorseCallBackUrlIsSet(true);
      }
      if (incoming.get(1)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
    }
  }

}

